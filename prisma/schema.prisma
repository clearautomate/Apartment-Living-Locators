generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  fname       String
  lname       String
  email       String?
  phone       String?
  username    String      @unique
  password    String
  permissions Permissions @default(agent)
  isDeleted   Boolean     @default(false)
  createdAt   DateTime    @default(now())

  leases Lease[]
  draws  Draw[]
}

enum Permissions {
  owner
  agent
}

model Lease {
  id                String         @id @default(uuid())
  moveInDate        DateTime
  invoiceNumber     String
  complex           String
  tenantFname       String
  tenantLname       String
  tenantEmail       String?
  apartmentNumber   String
  rentAmount        Float
  commissionType    CommissionType
  commissionPrecent Float?
  commission        Float
  extraNotes        String?

  paidStatus     PaidStatus @default(unpaid)
  totalPaid      Float?
  paidDifference Float?
  Payment        Payment[]

  createdAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

enum CommissionType {
  percent
  flat
}

enum PaidStatus {
  unpaid
  paid
  partially
  chargeback
}

model Payment {
  id      String @id @default(uuid())
  leaseId String
  lease   Lease  @relation(fields: [leaseId], references: [id])

  amount Float
  date   DateTime @default(now())
  notes  String?

  createdAt DateTime @default(now())
}

model Draw {
  id        String   @id @default(uuid())
  date      DateTime
  amount    Float
  createdAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])
}
